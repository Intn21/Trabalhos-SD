/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace ClienteServidor
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class aresta : TBase
  {
    private int _v1;
    private int _v2;
    private double _peso;
    private bool _direcionado;
    private string _descricao;

    public int V1
    {
      get
      {
        return _v1;
      }
      set
      {
        __isset.v1 = true;
        this._v1 = value;
      }
    }

    public int V2
    {
      get
      {
        return _v2;
      }
      set
      {
        __isset.v2 = true;
        this._v2 = value;
      }
    }

    public double Peso
    {
      get
      {
        return _peso;
      }
      set
      {
        __isset.peso = true;
        this._peso = value;
      }
    }

    public bool Direcionado
    {
      get
      {
        return _direcionado;
      }
      set
      {
        __isset.direcionado = true;
        this._direcionado = value;
      }
    }

    public string Descricao
    {
      get
      {
        return _descricao;
      }
      set
      {
        __isset.descricao = true;
        this._descricao = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool v1;
      public bool v2;
      public bool peso;
      public bool direcionado;
      public bool descricao;
    }

    public aresta() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.I32) {
                V1 = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.I32) {
                V2 = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.Double) {
                Peso = iprot.ReadDouble();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.Bool) {
                Direcionado = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                Descricao = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("aresta");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.v1) {
          field.Name = "v1";
          field.Type = TType.I32;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(V1);
          oprot.WriteFieldEnd();
        }
        if (__isset.v2) {
          field.Name = "v2";
          field.Type = TType.I32;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(V2);
          oprot.WriteFieldEnd();
        }
        if (__isset.peso) {
          field.Name = "peso";
          field.Type = TType.Double;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteDouble(Peso);
          oprot.WriteFieldEnd();
        }
        if (__isset.direcionado) {
          field.Name = "direcionado";
          field.Type = TType.Bool;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(Direcionado);
          oprot.WriteFieldEnd();
        }
        if (Descricao != null && __isset.descricao) {
          field.Name = "descricao";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Descricao);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("aresta(");
      bool __first = true;
      if (__isset.v1) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("V1: ");
        __sb.Append(V1);
      }
      if (__isset.v2) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("V2: ");
        __sb.Append(V2);
      }
      if (__isset.peso) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Peso: ");
        __sb.Append(Peso);
      }
      if (__isset.direcionado) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Direcionado: ");
        __sb.Append(Direcionado);
      }
      if (Descricao != null && __isset.descricao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Descricao: ");
        __sb.Append(Descricao);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
